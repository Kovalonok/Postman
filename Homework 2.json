{
	"info": {
		"_postman_id": "7a0ad65c-d46a-4f68-8729-20b466424086",
		"name": "Homework 2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24014433"
	},
	"item": [
		{
			"name": "first_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/first\r",
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Проверить, что в body приходит правильный string\r",
							"var resData = pm.response.text();\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(resData);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/user_info_3\r",
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Спарсить response body в json.\r",
							"var respData = pm.response.json();\r",
							"var respName = respData.name;\r",
							"//4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"Check name\", function () {\r",
							"pm.expect(respName).to.eql(\"Denys\");\r",
							"});\r",
							"//5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"var respAge = +respData.age;\r",
							"pm.test(\"Check age\", function () {\r",
							"pm.expect(respAge).to.eql(33);\r",
							"});\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"var respSalary = respData.salary;\r",
							"pm.test(\"Check salary\", function () {\r",
							"pm.expect(respSalary).to.eql(600);\r",
							"});\r",
							"//7. Спарсить request.\r",
							"var reqData = request.data;\r",
							"var reqName = reqData.name;\r",
							"var reqAge = +reqData.age;\r",
							"var reqSalary = +reqData.salary;\r",
							"//8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Check reqName\", function () {\r",
							"pm.expect(respName).to.eql(reqName);\r",
							"});\r",
							"//9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Check reqAge\", function () {\r",
							"pm.expect(respAge).to.eql(reqAge);\r",
							"});\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Check reqSalary\", function () {\r",
							"pm.expect(respSalary).to.eql(reqSalary);\r",
							"});\r",
							"//11. Вывести в консоль параметр family из response\r",
							"var respFamily = respData.family;\r",
							"console.log(respFamily);\r",
							"var respSalary_1_5_year = respFamily.u_salary_1_5_year;\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"Check respSalary\", function () {\r",
							"pm.expect(respSalary_1_5_year).to.eql(reqSalary*4)\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Denys",
							"type": "text"
						},
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "600",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Вставить параметр salary из окружения в request\r",
							"// 2. Вставить параметр age из окружения в age\r",
							"// 3. Вставить параметр name из окружения в name\r",
							"// 4. Отправить запрос.\r",
							"// 5. Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 6. Спарсить response body в json.\r",
							"var respData = pm.response.json();\r",
							"\r",
							"// 7. Спарсить request.\r",
							"var reqData = request.data;\r",
							"\r",
							"console.log(respData)\r",
							"\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"Check start_qa_salary\", function () {\r",
							"    pm.expect(respData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"Check qa_salary_after_6_months\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"Check qa_salary_after_12_months\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"Check qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"Check qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"Check person\", function () {\r",
							"    pm.expect(respData).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"var respPerson = respData.person;\r",
							"var respUname = respData.u_name;\r",
							"var reqSalary = +reqData.salary;\r",
							"\r",
							"console.log(reqSalary);\r",
							"\r",
							"\r",
							"var startSalary = respData.start_qa_salary;\r",
							"\r",
							"pm.test(\"Check start_qa_salary\", function () {\r",
							"    pm.expect(startSalary).to.eql(reqSalary);\r",
							"});\r",
							"\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"var salary_6m = respData.qa_salary_after_6_months;\r",
							"\r",
							"pm.test(\"Check qa_salary_after_6_months\", function () {\r",
							"    pm.expect(salary_6m).to.eql(reqSalary*2);\r",
							"});\r",
							"\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"var salary_12m = respData.qa_salary_after_12_months;\r",
							"\r",
							"pm.test(\"Check qa_salary_after_12_months\", function () {\r",
							"    pm.expect(salary_12m).to.eql(reqSalary*2.7);\r",
							"});\r",
							"\r",
							"\r",
							"// // 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"var salary_1_5_y = respData[\"qa_salary_after_1.5_year\"];\r",
							"\r",
							"pm.test(\"Check qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(salary_1_5_y).to.eql(reqSalary*3.3);\r",
							"});\r",
							"\r",
							"// // 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"var salary_3_5_y = respData[\"qa_salary_after_3.5_years\"];\r",
							"\r",
							"pm.test(\"Check qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(salary_3_5_y).to.eql(reqSalary*3.8);\r",
							"});\r",
							"\r",
							"// // 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"\r",
							"console.log(respPerson.u_name[1]);\r",
							"\r",
							"pm.test(\"Check u_name\", function () {\r",
							"    pm.expect(respPerson.u_name[1]).to.eql(reqSalary);\r",
							"});\r",
							"\r",
							"// // 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"\r",
							"var reqAge = reqData.age;\r",
							"\r",
							"console.log(respPerson.u_age);\r",
							"console.log(reqAge);\r",
							"\r",
							"pm.test(\"Check u_age\", function () {\r",
							"    pm.expect(respPerson.u_age).to.eql(+reqAge);\r",
							"});\r",
							"\r",
							"// // 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"\r",
							"var salary_5_y = respPerson.u_salary_5_years;\r",
							"\r",
							"pm.test(\"Check u_salary_5_years\", function () {\r",
							"    pm.expect(salary_5_y).to.eql(reqSalary*4.2);\r",
							"});\r",
							"\r",
							"// // 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"\r",
							"var person = (Object.keys(respPerson));\r",
							"for(var i = 0; i<3; i++){\r",
							"    console.log(person[i]);\r",
							"};\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Denys",
							"type": "text"
						},
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "600",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/object_info_3\r",
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Спарсить response body в json.\r",
							"var respData = pm.response.json();\r",
							"// 4. Спарсить request\r",
							"var reqData = pm.request.url.query.toObject();\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"respName = respData.name;\r",
							"reqName = reqData.name;\r",
							"pm.test(\"Check reqName\", function () {\r",
							"pm.expect(respName).to.eql(reqName);\r",
							"});\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"respAge = respData.age;\r",
							"reqAge = reqData.age;\r",
							"pm.test(\"Check reqAge\", function () {\r",
							"pm.expect(respAge).to.eql(reqAge);\r",
							"});\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"var respSalary = respData.salary;\r",
							"var reqSalary = +reqData.salary;\r",
							"pm.test(\"Check reqSalary\", function(){\r",
							"pm.expect(respSalary).to.eql(reqSalary);\r",
							"});\r",
							"// 8. Вывести в консоль параметр family из response.\r",
							"var respFamily = respData.family;\r",
							"// 9. Проверить, что у параметра dog есть параметры name.\r",
							"var respDog = respFamily.pets.dog;\r",
							"pm.test(\"Dog_name\", function () {\r",
							"pm.expect(respDog).to.have.property(\"name\");\r",
							"});\r",
							"//10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Dog_age\", function () {\r",
							"pm.expect(respDog).to.have.property(\"age\");\r",
							"});\r",
							"var respDname = respDog.name;\r",
							"var respDage = respDog.age;\r",
							"// 11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"name_Luky\", function(){\r",
							"pm.expect(respDname).to.eql(\"Luky\");\r",
							"});\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"age_4\", function(){\r",
							"pm.expect(respDage).to.eql(4);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Denys&age=33&salary=600",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Denys"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "600"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"var respData = pm.response.json();\r",
							"\r",
							"//4. Спарсить request.\r",
							"var reqData = pm.request.url.query.toObject();\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"var respName = respData.name;\r",
							"var reqName = reqData.name;\r",
							"\r",
							"pm.test(\"Check reqName\", function () {\r",
							"    pm.expect(respName).to.eql(reqName);\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"var respAge = respData.age;\r",
							"var reqAge = reqData.age;\r",
							"\r",
							"pm.test(\"Check reqAge\", function () {\r",
							"    pm.expect(respAge).to.eql(+reqAge);\r",
							"});\r",
							"\r",
							"// 7. Вывести в консоль параметр salary из request\r",
							"// 8. Вывести в консоль параметр salary из response.\r",
							"var respSalary = respData.salary;\r",
							"var reqSalary = +reqData.salary;\r",
							"\r",
							"console.log(respSalary);\r",
							"console.log(reqSalary);\r",
							"\r",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"console.log(respSalary[0]);\r",
							"console.log(respSalary[1]);\r",
							"console.log(respSalary[2]);\r",
							"\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"var respSalary_1 = respSalary[0];\r",
							"\r",
							"pm.test(\"Check reqSalary\", function () {\r",
							"    pm.expect(respSalary_1).to.eql(reqSalary);\r",
							"});\r",
							"\r",
							"\r",
							"var respSalary_2 = respSalary[1];\r",
							"\r",
							"pm.test(\"Check reqName\", function () {\r",
							"    pm.expect(+respSalary_2).to.eql(reqSalary*2);\r",
							"});\r",
							"\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"var respSalary_3 = respSalary[2];\r",
							"\r",
							"pm.test(\"Check reqName\", function () {\r",
							"    pm.expect(+respSalary_3).to.eql(reqSalary*3);\r",
							"});\r",
							"\r",
							"console.log(typeof respSalary_2);\r",
							"console.log(typeof reqSalary);\r",
							"\r",
							"// 15. Создать в окружении переменную name\r",
							"// 16. Создать в окружении переменную age\r",
							"// 17. Создать в окружении переменную salary\r",
							"\r",
							"var reqAge = reqData.age;\r",
							"// 18. Передать в окружение переменную name\r",
							"pm.environment.set(\"name\", reqName);\r",
							"//19. Передать в окружение переменную age\r",
							"pm.environment.set(\"age\", reqAge);\r",
							"//20. Передать в окружение переменную salary\r",
							"pm.environment.set(\"salary\", reqSalary);\r",
							"\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"for(var i = 0; i < 3; i++){\r",
							"console.log(+respSalary[i]);\r",
							"};\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Denys&age=33&salary=600",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Denys"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "600"
						}
					]
				}
			},
			"response": []
		}
	]
}